#include <iostream>
#include <climits>
#include <numeric> 
using namespace std;
 
int optimalCost(int keys[], int freq[], int n) {
   int cost[n][n] = {0};
 
   for (int i = 0; i < n; i++)
       cost[i][i] = freq[i];
 
   for (int L = 2; L <= n; L++) {
       for (int i = 0; i <= n - L; i++) {
           int j = i + L - 1;
           cost[i][j] = INT_MAX;
 
           for (int r = i; r <= j; r++) {
               int c = ((r > i) ? cost[i][r - 1] : 0) +
                       ((r < j) ? cost[r + 1][j] : 0) +
                       accumulate(freq + i, freq + j + 1, 0);
 
               if (c < cost[i][j])
                   cost[i][j] = c;
           }
       }
   }
 
   return cost[0][n - 1];
}
 
int main() {
   int n;
   cout << "Enter the number of keys: ";
   cin >> n;
 
   int keys[n], freq[n];
   cout << "Enter the keys: ";
   for (int i = 0; i < n; i++) cin >> keys[i];
 
   cout << "Enter the frequencies: ";
   for (int i = 0; i < n; i++) cin >> freq[i];
 
   cout << "Cost of Optimal BST: " << optimalCost(keys, freq, n) << endl;
   return 0;
}

