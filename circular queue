#include <iostream>
#define SIZE 5  
using namespace std;
 
class CircularQueue {
   int arr[SIZE];  
   int front;     
   int rear;      
public:
   CircularQueue() {
       front = -1;
       rear = -1;
   }
 
   bool isFull() {
       return (front == 0 && rear == SIZE - 1) || (rear + 1 == front);
   }
 
   bool isEmpty() {
       return front == -1;
   }
 
   void enqueue(int value) {
       if (isFull()) {
           cout << "Queue is full. Cannot enqueue " << value << ".\n";
           return;
       }
       if (front == -1) {  
           front = 0;
       }
       rear = (rear + 1) % SIZE;  
       arr[rear] = value;
       cout << value << " enqueued to the queue.\n";
   }
 
  
   void dequeue() {
       if (isEmpty()) {
           cout << "Queue is empty. Cannot dequeue.\n";
           return;
       }
       cout << "Dequeued: " << arr[front] << "\n";
       if (front == rear) {  
           front = -1;
           rear = -1;
       } else {
           front = (front + 1) % SIZE;  
       }
   }
 

   void display() {
       if (isEmpty()) {
           cout << "Queue is empty.\n";
           return;
       }
       cout << "Queue elements: ";
       int i = front;
       while (true) {
           cout << arr[i] << " ";
           if (i == rear) break;
           i = (i + 1) % SIZE;  
       }
       cout << "\n";
   }
};
 
int main() {
   CircularQueue q;
   int choice, value;
 
   do {
       cout << "\nMenu:\n";
       cout << "1. Enqueue\n";
       cout << "2. Dequeue\n";
       cout << "3. Display Queue\n";
       cout << "4. Exit\n";
       cout << "Enter your choice: ";
       cin >> choice;
 
       switch (choice) {
           case 1:
               cout << "Enter the value to enqueue: ";
               cin >> value;
               q.enqueue(value);
               break;
           case 2:
               q.dequeue();
               break;
           case 3:
               q.display();
               break;
           case 4:
               cout << "Exiting...\n";
               break;
           default:
               cout << "Invalid choice. Please try again.\n";
       }
   } while (choice != 4);
 
   return 0;
}
