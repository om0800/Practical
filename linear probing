#include <iostream>
using namespace std;
 
#define SIZE 10
 
struct Node {
   int data;
   Node* next;
};
 
class HashTable {
   Node* table[SIZE];
public:
   HashTable() {
       for (int i = 0; i < SIZE; i++)
           table[i] = nullptr;
   }
 
   void insert(int key) {
       int index = key % SIZE;
       Node* newNode = new Node{key, table[index]};
       table[index] = newNode;
   }
 
   void display() {
       for (int i = 0; i < SIZE; i++) {
           cout << i << ": ";
           Node* temp = table[i];
           while (temp) {
               cout << temp->data << " -> ";
               temp = temp->next;
           }
           cout << "NULL\n";
       }
   }
};
 
int main() {
   HashTable ht;
   int choice, key;
 
   do {
       // Menu for user interaction
       cout << "\nHash Table Operations:\n";
       cout << "1. Insert a new key\n";
       cout << "2. Display the hash table\n";
       cout << "3. Exit\n";
       cout << "Enter your choice: ";
       cin >> choice;
 
       switch (choice) {
           case 1:
               cout << "Enter key to insert: ";
               cin >> key;
               ht.insert(key);  
               break;
 
           case 2:
               cout << "Hash Table Contents:\n";
               ht.display();  
               break;
 
           case 3:
               cout << "Exiting...\n";
               break;
 
           default:
               cout << "Invalid choice. Please try again.\n";
       }
   } while (choice != 3);  
 
   return 0;
}
